//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Project/Scripts/Survival Base/Survival Base Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SurvivalBaseInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SurvivalBaseInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Survival Base Inputs"",
    ""maps"": [
        {
            ""name"": ""Camera Movement"",
            ""id"": ""4c38c1ac-0f47-4fc6-8a56-bff5f9c1a1bd"",
            ""actions"": [
                {
                    ""name"": ""First Touch Contact"",
                    ""type"": ""Button"",
                    ""id"": ""5e254cd8-308a-4a60-a826-3536d9daee78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Second Touch Contact"",
                    ""type"": ""Button"",
                    ""id"": ""347c2c52-7db0-4fb5-939e-7154b4b7fc87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""First Touch Position"",
                    ""type"": ""Value"",
                    ""id"": ""59f41d1e-8594-4d94-91a0-82e0660dc7b2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Second Touch Position"",
                    ""type"": ""Value"",
                    ""id"": ""160092bc-c0c6-4257-a11e-0654061ad61d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""First Touch Delta Position"",
                    ""type"": ""Value"",
                    ""id"": ""1142ae5f-1173-48c0-bd3e-124b8be49a67"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Second Touch Delta Position"",
                    ""type"": ""Value"",
                    ""id"": ""a870bfd2-66a1-4c0a-9c89-a1418d4f7058"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b50008c2-dc60-4f95-8839-0b99be679a1c"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""First Touch Contact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29b176df-d9df-42fe-befa-0ecbbd87761c"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Second Touch Contact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa0bf94c-51bf-40b4-a3f2-6ae73b158ce7"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""First Touch Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c379c97-1965-4465-9e24-cde2d82c31bb"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Second Touch Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60b7d3f2-e7b5-4af0-906d-3f2eba2bf913"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""First Touch Delta Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3977e7fa-b21e-46d1-8438-434400498092"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Second Touch Delta Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera Movement
        m_CameraMovement = asset.FindActionMap("Camera Movement", throwIfNotFound: true);
        m_CameraMovement_FirstTouchContact = m_CameraMovement.FindAction("First Touch Contact", throwIfNotFound: true);
        m_CameraMovement_SecondTouchContact = m_CameraMovement.FindAction("Second Touch Contact", throwIfNotFound: true);
        m_CameraMovement_FirstTouchPosition = m_CameraMovement.FindAction("First Touch Position", throwIfNotFound: true);
        m_CameraMovement_SecondTouchPosition = m_CameraMovement.FindAction("Second Touch Position", throwIfNotFound: true);
        m_CameraMovement_FirstTouchDeltaPosition = m_CameraMovement.FindAction("First Touch Delta Position", throwIfNotFound: true);
        m_CameraMovement_SecondTouchDeltaPosition = m_CameraMovement.FindAction("Second Touch Delta Position", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera Movement
    private readonly InputActionMap m_CameraMovement;
    private List<ICameraMovementActions> m_CameraMovementActionsCallbackInterfaces = new List<ICameraMovementActions>();
    private readonly InputAction m_CameraMovement_FirstTouchContact;
    private readonly InputAction m_CameraMovement_SecondTouchContact;
    private readonly InputAction m_CameraMovement_FirstTouchPosition;
    private readonly InputAction m_CameraMovement_SecondTouchPosition;
    private readonly InputAction m_CameraMovement_FirstTouchDeltaPosition;
    private readonly InputAction m_CameraMovement_SecondTouchDeltaPosition;
    public struct CameraMovementActions
    {
        private @SurvivalBaseInputs m_Wrapper;
        public CameraMovementActions(@SurvivalBaseInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @FirstTouchContact => m_Wrapper.m_CameraMovement_FirstTouchContact;
        public InputAction @SecondTouchContact => m_Wrapper.m_CameraMovement_SecondTouchContact;
        public InputAction @FirstTouchPosition => m_Wrapper.m_CameraMovement_FirstTouchPosition;
        public InputAction @SecondTouchPosition => m_Wrapper.m_CameraMovement_SecondTouchPosition;
        public InputAction @FirstTouchDeltaPosition => m_Wrapper.m_CameraMovement_FirstTouchDeltaPosition;
        public InputAction @SecondTouchDeltaPosition => m_Wrapper.m_CameraMovement_SecondTouchDeltaPosition;
        public InputActionMap Get() { return m_Wrapper.m_CameraMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMovementActions set) { return set.Get(); }
        public void AddCallbacks(ICameraMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Add(instance);
            @FirstTouchContact.started += instance.OnFirstTouchContact;
            @FirstTouchContact.performed += instance.OnFirstTouchContact;
            @FirstTouchContact.canceled += instance.OnFirstTouchContact;
            @SecondTouchContact.started += instance.OnSecondTouchContact;
            @SecondTouchContact.performed += instance.OnSecondTouchContact;
            @SecondTouchContact.canceled += instance.OnSecondTouchContact;
            @FirstTouchPosition.started += instance.OnFirstTouchPosition;
            @FirstTouchPosition.performed += instance.OnFirstTouchPosition;
            @FirstTouchPosition.canceled += instance.OnFirstTouchPosition;
            @SecondTouchPosition.started += instance.OnSecondTouchPosition;
            @SecondTouchPosition.performed += instance.OnSecondTouchPosition;
            @SecondTouchPosition.canceled += instance.OnSecondTouchPosition;
            @FirstTouchDeltaPosition.started += instance.OnFirstTouchDeltaPosition;
            @FirstTouchDeltaPosition.performed += instance.OnFirstTouchDeltaPosition;
            @FirstTouchDeltaPosition.canceled += instance.OnFirstTouchDeltaPosition;
            @SecondTouchDeltaPosition.started += instance.OnSecondTouchDeltaPosition;
            @SecondTouchDeltaPosition.performed += instance.OnSecondTouchDeltaPosition;
            @SecondTouchDeltaPosition.canceled += instance.OnSecondTouchDeltaPosition;
        }

        private void UnregisterCallbacks(ICameraMovementActions instance)
        {
            @FirstTouchContact.started -= instance.OnFirstTouchContact;
            @FirstTouchContact.performed -= instance.OnFirstTouchContact;
            @FirstTouchContact.canceled -= instance.OnFirstTouchContact;
            @SecondTouchContact.started -= instance.OnSecondTouchContact;
            @SecondTouchContact.performed -= instance.OnSecondTouchContact;
            @SecondTouchContact.canceled -= instance.OnSecondTouchContact;
            @FirstTouchPosition.started -= instance.OnFirstTouchPosition;
            @FirstTouchPosition.performed -= instance.OnFirstTouchPosition;
            @FirstTouchPosition.canceled -= instance.OnFirstTouchPosition;
            @SecondTouchPosition.started -= instance.OnSecondTouchPosition;
            @SecondTouchPosition.performed -= instance.OnSecondTouchPosition;
            @SecondTouchPosition.canceled -= instance.OnSecondTouchPosition;
            @FirstTouchDeltaPosition.started -= instance.OnFirstTouchDeltaPosition;
            @FirstTouchDeltaPosition.performed -= instance.OnFirstTouchDeltaPosition;
            @FirstTouchDeltaPosition.canceled -= instance.OnFirstTouchDeltaPosition;
            @SecondTouchDeltaPosition.started -= instance.OnSecondTouchDeltaPosition;
            @SecondTouchDeltaPosition.performed -= instance.OnSecondTouchDeltaPosition;
            @SecondTouchDeltaPosition.canceled -= instance.OnSecondTouchDeltaPosition;
        }

        public void RemoveCallbacks(ICameraMovementActions instance)
        {
            if (m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraMovementActions @CameraMovement => new CameraMovementActions(this);
    public interface ICameraMovementActions
    {
        void OnFirstTouchContact(InputAction.CallbackContext context);
        void OnSecondTouchContact(InputAction.CallbackContext context);
        void OnFirstTouchPosition(InputAction.CallbackContext context);
        void OnSecondTouchPosition(InputAction.CallbackContext context);
        void OnFirstTouchDeltaPosition(InputAction.CallbackContext context);
        void OnSecondTouchDeltaPosition(InputAction.CallbackContext context);
    }
}
